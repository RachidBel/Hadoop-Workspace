import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.filecache.DistributedCache;


public class Mapper1 extends Mapper<LongWritable,Text,Text,Text> {

	private HashMap<String,String> hm = new HashMap<String,String>();
	@Override
	protected void map(LongWritable key, Text value,
			org.apache.hadoop.mapreduce.Mapper.Context context)
			throws IOException, InterruptedException {
		
		
		String arr[]=value.toString().split(",");
		
		if(arr[17].equals("SFO"))
		{
			try
			{
		int year = Integer.parseInt(arr[0]);
		int month = Integer.parseInt(arr[1]);
		int date= Integer.parseInt(arr[2]);
		
		if(hm.containsKey(year+""+month+""+date))
		{
		context.write(new Text(arr[0]+","+arr[1]+","+arr[2]+","+arr[4]+","+arr[6]+","+arr[8]+","+arr[9]+","+arr[11]+","+arr[14]+","+arr[15]+","+arr[16]+","+arr[17],new Text(""));
		}
			}
			catch(Exception e)
			{
				e.getMessage();
			}
		}
		
	}

	@Override
	protected void setup(org.apache.hadoop.mapreduce.Mapper.Context context)
			throws IOException, InterruptedException {
		
		Configuration conf = context.getConfiguration();
		FileSystem fs = FileSystem.getLocal(conf);
		Path p[]=DistributedCache.getLocalCacheFiles(conf);
		
		String s="";
		BufferedReader br = new BufferedReader(new InputStreamReader(fs.open(p[0])));
		
		while((s=br.readLine())!=null)
		{
			String a[]=s.split(",");
			if(!a[0].equals("STATION_NAME"))
			{
				int year = Integer.parseInt(a[1]);
				int month = Integer.parseInt(a[2]);
				int date= Integer.parseInt(a[3]);
				
				hm.put(year+""+month+""+date,a[4]+","+a[5]+","+a[6]);
			}
		}
		
	}

	
}
